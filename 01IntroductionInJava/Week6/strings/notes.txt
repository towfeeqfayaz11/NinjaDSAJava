# In java, we cannot take individual character as input like nextInt for integer etc.
# Rather we can take entire string as input using next() or nextLine()

# also when we print the array reference variable directly, for other datatype, it prints the address of the first value,
  but for character array, it prints the entire character array as string

=================

# different ways to create string in java
// using string literal
String s1 = "Welcome";

// using new keyword
String s2 = new String("coding");

// passing char array
char[] ch = {'n', 'i', 'n', 'j', 'a'};
String s3 = new String(ch);

// passing byte array
byte[] b = {97, 98, 99, 100, 101};
String s4 = new String(b);

====================================


# Mutable strings in java (StringBuffer class)

StringBuffer s1 = new StringBuffer(); // has length and capacity (default capacity is 16 characters)
System.out.println(s1.length());      // default length is 0 (since empty string)
System.out.println(s1.capacity());    // default capacity is 16 characters


StringBuffer s1 = new StringBuffer(30); // will create string with capacity of 30 characters
StringBuffer s1 = new StringBuffer("Hello"); // length is 5, initial capacity is (16+5)=21


NOTE: String in java is immutable while StringBuffer is mutable
NOTE: StringBuffer objects store their content on the heap not in the string pool. (This is the
      fundamental distinction between String and StringBuffer in java)


==============

# for string null is assigned as
String s1 = null;

# for char null is assigned as
char c1 = '\0';